      real*8 function phimes( r )
c  Copyright (C) 2014, Jerry Sellwood
      implicit none
c returns potential in mid-plane of a full-mass FINITE Mestel disc
c
c calling argument
      real*8 r
c
c externals
c      external frdisc
      real*8 aitken2
c
c local arrays
c      integer lw, liw
c      parameter ( lw = 1000, liw = lw / 8 + 2 )
c      integer iw( liw )
c      real*8 w( lw )
      integer ntab
      parameter ( ntab = 100 )
      real*8 x( ntab + 1 ), y( ntab + 1 )
c
c local variables
      integer i
c, ifail
c      real*8 abserr, epsabs, epsrel,
      real*8 r2
      include 'inc/pi.f'
c
      data x / 0.00, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08,
     +         0.09, 0.10, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17,
     +         0.18, 0.19, 0.20, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26,
     +         0.27, 0.28, 0.29, 0.30, 0.31, 0.32, 0.33, 0.34, 0.35,
     +         0.36, 0.37, 0.38, 0.39, 0.40, 0.41, 0.42, 0.43, 0.44,
     +         0.45, 0.46, 0.47, 0.48, 0.49, 0.50, 0.51, 0.52, 0.53,
     +         0.54, 0.55, 0.56, 0.57, 0.58, 0.59, 0.60, 0.61, 0.62,
     +         0.63, 0.64, 0.65, 0.66, 0.67, 0.68, 0.69, 0.70, 0.71,
     +         0.72, 0.73, 0.74, 0.75, 0.76, 0.77, 0.78, 0.79, 0.80,
     +         0.81, 0.82, 0.83, 0.84, 0.85, 0.86, 0.87, 0.88, 0.89,
     +         0.90, 0.91, 0.92, 0.93, 0.94, 0.95, 0.96, 0.97, 0.98,
     +         0.99, 1.00 /
      data ( y( i ), i = 1, 51 ) /
     +       -1.000000000000000, -1.000005555705562, -1.000022224622630,
     +       -1.000050012154651, -1.000088927315034, -1.000138982738670,
     +       -1.000200194698119, -1.000272583124487, -1.000356171633078,
     +       -1.000450987553895, -1.000557061967069, -1.000674429743337,
     +       -1.000803129589689, -1.000943204100317, -1.001094699813041,
     +       -1.001257667271370, -1.001432161092401, -1.001618240040785,
     +       -1.001815967108978, -1.002025409604051, -1.002246639241352,
     +       -1.002479732245318, -1.002724769457797, -1.002981836454245,
     +       -1.003251023668203, -1.003532426524511, -1.003826145581727,
     +       -1.004132286684288, -1.004450961124980, -1.004782285818345,
     +       -1.005126383485698, -1.005483382852494, -1.005853418858857,
     +       -1.006236632884139, -1.006633172986471, -1.007043194158357,
     +       -1.007466858599439, -1.007904336007705, -1.008355803890485,
     +       -1.008821447896749, -1.009301462172354, -1.009796049740034,
     +       -1.010305422906139, -1.010829803696301, -1.011369424322449,
     +       -1.011924527683841, -1.012495367905068, -1.013082210914295,
     +       -1.013685335065381, -1.014305031807914, -1.014941606409654/
      data ( y( i ), i = 52, 101 ) /
     +       -1.015595378736417, -1.016266684095011, -1.016955874145514,
     +       -1.017663317889974, -1.018389402745481, -1.019134535710590,
     +       -1.019899144635256, -1.020683679605793, -1.021488614457959,
     +       -1.022314448433095, -1.023161707994393, -1.024030948822905,
     +       -1.024922758015813, -1.025837756513034, -1.026776601782317,
     +       -1.027739990797970, -1.028728663354221, -1.029743405761335,
     +       -1.030785054981173, -1.031854503269301, -1.032952703403492,
     +       -1.034080674594107, -1.035239509191233, -1.036430380327564,
     +       -1.037654550666350, -1.038913382462044, -1.040208349190226,
     +       -1.041541049066394, -1.042913220855150, -1.044326762479077,
     +       -1.045783753079889, -1.047286479377484, -1.048837467436247,
     +       -1.050439521313666, -1.052095770582408, -1.053809729458851,
     +       -1.055585371360498, -1.057427224352979, -1.059340495478810,
     +       -1.061331235995176, -1.063406566216571, -1.065574990156898,
     +       -1.067846851025320, -1.070235018885275, -1.072755985710398,
     +       -1.075431736408472, -1.078293274306056, -1.081388318221473,
     +       -1.084803026961911, -1.088793045151801 /
cc create table
c      print *, 'building a table of potentials'
c      ifail = 0
c      epsabs = 1.e-12
c      epsrel = 1.e-10
c      do i = 1, ntab
cc uniform spacing in 1 / r
c        x( i + 1 ) = dble( i ) / dble( ntab )
c        r2 = 1. / x( i + 1 )
cc integral of radial force from r to infinity
c        call d01amf( frdisc, r2, 1, epsabs, epsrel, phimes, abserr,
c     +               w, lw, iw, liw, ifail )
c        y( i + 1 ) = r2 * phimes
c      end do
cc end value
c      x( 1 ) = 0
c      y( 1 ) = -1
c      print *, 'table ready'
c
      if( r .lt. 1.d0 )then
        r2 = .01
        r2 = max( r, r2 )
        phimes = y( ntab + 1 ) + .5 * pi * log( r2 )
      else
        phimes = aitken2( x, y, ntab + 1, 1.d0 / r ) / r
      end if
      return
      end
