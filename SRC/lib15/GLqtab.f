      subroutine GLqtab( a, b, npts, wgt, acs )
c returns abscissae and weights for Gauss-Legendre quadrature
c   the weights and abscissae are rescaled from the tabulated
c   half-range using the formulae
c     w(a,b) = 0.5 * (b-a) * w(-1,+1)
c     x(a,b) = 0.5 * (b-a) * x(-1,+1) + 0.5 * (a+b)
      implicit none
c
c calling arguments
      integer npts
      real*8 a, b, acs( npts ), wgt( npts )
c
c local arrays
      integer nval( 15 )
      real*8 tab( 135, 2 )
      real*8 a2, a3( 2 ), a4( 2 ), a5( 3 ), a6( 3 )
      real*8 a8( 4 ), a10( 5 ), a12( 6 ), a14( 7 ), a16( 8 ), a20( 10 )
      real*8 a24( 12 ), a32( 16 ), a48( 24 ), a64( 32 )
      real*8 w2, w3( 2 ), w4( 2 ), w5( 3 ), w6( 3 )
      real*8 w8( 4 ), w10( 5 ), w12( 6 ), w14( 7 ), w16( 8 ), w20( 10 )
      real*8 w24( 12 ), w32( 16 ), w48( 24 ), w64( 32 )
      equivalence ( a2, tab( 1, 1 ) ), ( a3( 1 ), tab( 2, 1 ) )
      equivalence ( a4( 1 ), tab( 4, 1 ) ), ( a5( 1 ), tab( 6, 1 ) )
      equivalence ( a6( 1 ), tab( 9, 1 ) ), ( a8( 1 ), tab( 12, 1 ) )
      equivalence ( a10( 1 ), tab( 16, 1 ) ), ( a12( 1 ), tab( 21, 1 ) )
      equivalence ( a14( 1 ), tab( 27, 1 ) ), ( a16( 1 ), tab( 34, 1 ) )
      equivalence ( a20( 1 ), tab( 42, 1 ) ), ( a24( 1 ), tab( 52, 1 ) )
      equivalence ( a32( 1 ), tab( 64, 1 ) ), ( a48( 1 ), tab( 80, 1 ) )
      equivalence ( a64( 1 ), tab( 104, 1 ) )
      equivalence ( w2, tab( 1, 2 ) ), ( w3( 1 ), tab( 2, 2 ) )
      equivalence ( w4( 1 ), tab( 4, 2 ) ), ( w5( 1 ), tab( 6, 2 ) )
      equivalence ( w6( 1 ), tab( 9, 2 ) ), ( w8( 1 ), tab( 12, 2 ) )
      equivalence ( w10( 1 ), tab( 16, 2 ) ), ( w12( 1 ), tab( 21, 2 ) )
      equivalence ( w14( 1 ), tab( 27, 2 ) ), ( w16( 1 ), tab( 34, 2 ) )
      equivalence ( w20( 1 ), tab( 42, 2 ) ), ( w24( 1 ), tab( 52, 2 ) )
      equivalence ( w32( 1 ), tab( 64, 2 ) ), ( w48( 1 ), tab( 80, 2 ) )
      equivalence ( w64( 1 ), tab( 104, 2 ) )
c
c local variables
      integer i, j, k
      real*8 hrnge, xmean
c
      data nval / 2, 3, 4, 5, 6, 8, 10, 12, 14, 16, 20, 24, 32, 48, 64 /
c tables of abscissae and weights
      data  a2,  w2 / 0.577350269189625764509148780501d0, 1.d0 /
      data  a3,  w3 / 0.774596669241483377035853079956d0,
     +                0.d0,
     +                0.555555555555555555555555555555d0,
     +                0.888888888888888888888888888888d0 /
      data  a4,  w4 / 0.861136311594052575223946488892d0,
     +                0.339981043584856264802665759103d0,
     +                0.347854845137453857373063949221d0,
     +                0.652145154862546142626936050778d0 /
      data  a5,  w5 / 0.906179845938663992797626878299d0,
     +                0.538469310105683091036314420700d0,
     +                0.d0,
     +                0.236926885056189087514264040719d0, !1
     +                0.478628670499366468041291514835d0,
     +                0.568888888888888888888888888888d0 /
      data  a6,  w6 / 0.932469514203152027812301554493d0,
     +                0.661209386466264513661399595019d0,
     +                0.238619186083196908630501721680d0,
     +                0.171324492379170345040296142172d0, !1
     +                0.360761573048138607569833513837d0,
     +                0.467913934572691047389870343989d0 /
      data  a8,  w8 / 0.960289856497536231683560868569d0,
     +                0.796666477413626739591553936475d0,
     +                0.525532409916328985817739049189d0,
     +                0.183434642495649804939476142360d0,
     +                0.101228536290376259152531354309d0, !1
     +                0.222381034453374470544355994426d0,
     +                0.313706645877887287337962201986d0,
     +                0.362683783378361982965150449277d0 /
      data a10, w10 / 0.973906528517171720077964012084d0,
     +                0.865063366688984510732096688423d0,
     +                0.679409568299024406234327365114d0,
     +                0.433395394129247190799265943165d0,
     +                0.148874338981631210884826001129d0,
     +                0.666713443086881375935688098933d-1, !1
     +                0.149451349150580593145776339657d0,
     +                0.219086362515982043995534934228d0,
     +                0.269266719309996355091226921569d0,
     +                0.295524224714752870173892994651d0 /
      data a12, w12 / 0.981560634246719250690549090149d0,
     +                0.904117256370474856678465866119d0,
     +                0.769902674194304687036893833212d0,
     +                0.587317954286617447296702418940d0,
     +                0.367831498998180193752691536643d0, !5
     +                0.125233408511468915472441369463d0,
     +                0.471753363865118271946159614850d-1, !1
     +                0.106939325995318430960254718193d0,
     +                0.160078328543346226334652529543d0,
     +                0.203167426723065921749064455809d0,
     +                0.233492536538354808760849898924d0, !5
     +                0.249147045813402785000562436042d0 /
      data a14, w14 / 0.986283808696812338841597266704d0,
     +                0.928434883663573517336391139377d0,
     +                0.827201315069764993189794742650d0,
     +                0.687292904811685470148019803019d0,
     +                0.515248636358154091965290718551d0, !5
     +                0.319112368927889760435671824168d0,
     +                0.108054948707343662066244650219d0,
     +                0.351194603317518630318328761381d-1, !1
     +                0.801580871597602098056332770628d-1,
     +                0.121518570687903184689414809072d0,
     +                0.157203167158193534569601938623d0,
     +                0.185538397477937813741716590125d0, !5
     +                0.205198463721295603965924065661d0,
     +                0.215263853463157790195876443316d0 /
      data a16, w16 / 0.989400934991649932596154173450d0,
     +                0.944575023073232576077988415534d0,
     +                0.865631202387831743880467897712d0,
     +                0.755404408355003033895101194847d0,
     +                0.617876244402643748446671764048d0, !5
     +                0.458016777657227386342419442983d0,
     +                0.281603550779258913230460501460d0,
     +                0.950125098376374401853193354249d-1,
     +                0.271524594117540948517805724560d-1, !1
     +                0.622535239386478928628438369943d-1,
     +                0.951585116824927848099251076022d-1,
     +                0.124628971255533872052476282192d0,
     +                0.149595988816576732081501730547d0,
     +                0.169156519395002538189312079030d0, !5
     +                0.182603415044923588866763667969d0,
     +                0.189450610455068496285396723208d0 /
      data a20, w20 / 0.993128599185094924786122388471d0,
     +                0.963971927277913791267666131197d0,
     +                0.912234428251325905867752441203d0,
     +                0.839116971822218823394529061701d0,
     +                0.746331906460150792614305070355d0, !5
     +                0.636053680726515025452836696226d0,
     +                0.510867001950827098004364050955d0,
     +                0.373706088715419560672548177024d0,
     +                0.227785851141645078080496195368d0,
     +                0.765265211334973337546404093988d-1, !10
     +                0.176140071391521183118619623518d-1, !1
     +                0.406014298003869413310399522749d-1,
     +                0.626720483341090635695065351870d-1,
     +                0.832767415767047487247581432220d-1,
     +                0.101930119817240435036750135480d0, !5
     +                0.118194531961518417312377377711d0,
     +                0.131688638449176626898494499748d0,
     +                0.142096109318382051329298325067d0,
     +                0.149172986472603746787828737001d0,
     +                0.152753387130725850698084331955d0 / !10
      data a24, w24 / 0.995187219997021360179997409700d0,
     +                0.974728555971309498198391993008d0,
     +                0.938274552002732758523649001708d0,
     +                0.886415527004401034213154341982d0,
     +                0.820001985973902921953949872669d0, !5
     +                0.740124191578554364243828103099d0,
     +                0.648093651936975569252495786910d0,
     +                0.545421471388839535658375617218d0,
     +                0.433793507626045138487084231913d0,
     +                0.315042679696163374386793291319d0, !10
     +                0.191118867473616309158639820757d0,
     +                0.640568928626056260850430826247d-1,
     +                0.123412297999871995468056670700d-1, !1
     +                0.285313886289336631813078159518d-1,
     +                0.442774388174198061686027482113d-1,
     +                0.592985849154367807463677585001d-1,
     +                0.733464814110803057340336152531d-1, !5
     +                0.861901615319532759171852029837d-1,
     +                0.976186521041138882698806644642d-1,
     +                0.107444270115965634782577342446d0,
     +                0.115505668053725601353344483906d0,
     +                0.121670472927803391204463153476d0, !10
     +                0.125837456346828296121375382511d0,
     +                0.127938195346752156974056165224d0 /
      data a32, w32 / 0.997263861849481563544981128665d0, !1
     +                0.985611511545268335400175044630d0,
     +                0.964762255587506430773811928118d0,
     +                0.934906075937739689170919134835d0,
     +                0.896321155766052123965307243719d0, !5
     +                0.849367613732569970133693004967d0,
     +                0.794483795967942406963097298970d0,
     +                0.732182118740289680387426665091d0,
     +                0.663044266930215200975115168663d0,
     +                0.587715757240762329040745476401d0, !10
     +                0.506899908932229390023747474377d0,
     +                0.421351276130635345364119436172d0,
     +                0.331868602282127649779916805730d0,
     +                0.239287362252137074544603209165d0,
     +                0.144471961582796493485186373598d0, !15
     +                0.483076656877383162348125704405d-1,
     +                0.701861000947009660040706373885d-2, !1
     +                0.162743947309056706051705622063d-1,
     +                0.253920653092620594557525897892d-1,
     +                0.342738629130214331026877322523d-1,
     +                0.428358980222266806568786466061d-1, !5
     +                0.509980592623761761961632446895d-1,
     +                0.586840934785355471452836373001d-1,
     +                0.658222227763618468376500637069d-1,
     +                0.723457941088485062253993564784d-1,
     +                0.781938957870703064717409188283d-1, !10
     +                0.833119242269467552221990746043d-1,
     +                0.876520930044038111427714627518d-1,
     +                0.911738786957638847128685771116d-1,
     +                0.938443990808045656391802376681d-1,
     +                0.956387200792748594190820022041d-1, !15
     +                0.965400885147278005667648300635d-1 /
      data a48, w48 / 0.998771007252426118600541491563d0, !1
     +                0.993530172266350757547928750849d0,
     +                0.984124583722826857744583600026d0,
     +                0.970591592546247250461411983800d0,
     +                0.952987703160430860722960666025d0, !5
     +                0.931386690706554333114174380101d0,
     +                0.905879136715569672822074835671d0,
     +                0.876572020274247885905693554805d0,
     +                0.843588261624393530711089844519d0,
     +                0.807066204029442627082553043024d0, !10
     +                0.767159032515740339253855437522d0,
     +                0.724034130923814654674482233493d0,
     +                0.677872379632663905211851280675d0,
     +                0.628867396776513623995164933069d0,
     +                0.577224726083972703817809238540d0, !15
     +                0.523160974722233033678225869137d0,
     +                0.466902904750958404544928861650d0,
     +                0.408686481990716729916225495814d0,
     +                0.348755886292160738159817937270d0,
     +                0.287362487355455576735886461316d0, !20
     +                0.224763790394689061224865440174d0,
     +                0.161222356068891718056437390783d0,
     +                0.970046992094626989300539558536d-1,
     +                0.323801709628693620333222431521d-1,
     +                0.315334605230583863267731154389d-2, !1
     +                0.732755390127626210238397962178d-2,
     +                0.114772345792345394895926676090d-1,
     +                0.155793157229438487281769558344d-1,
     +                0.196161604573555278144607196522d-1, !5
     +                0.235707608393243791405193013784d-1,
     +                0.274265097083569482000738362625d-1,
     +                0.311672278327980889020657568463d-1,
     +                0.347772225647704388925485859638d-1,
     +                0.382413510658307063172172565237d-1, !10
     +                0.415450829434647492140588223610d-1,
     +                0.446745608566942804194485871258d-1,
     +                0.476166584924904748259066234789d-1,
     +                0.503590355538544749578076190878d-1,
     +                0.528901894851936670955050562646d-1, !15
     +                0.551995036999841628682034951916d-1,
     +                0.572772921004032157051502346847d-1,
     +                0.591148396983956357464748174335d-1,
     +                0.607044391658938800529692320278d-1,
     +                0.620394231598926639041977841375d-1, !20
     +                0.631141922862540256571260227502d-1,
     +                0.639242385846481866239062018255d-1,
     +                0.644661644359500822065041936577d-1,
     +                0.647376968126839225030249387365d-1 /
      data a64, w64 / 0.999305041735772139456905624345d0,
     +                0.996340116771955279346924500676d0,
     +                0.991013371476744320739382383443d0,
     +                0.983336253884625956931299302156d0,
     +                0.973326827789910963741853507352d0, !5
     +                0.961008799652053718918614121897d0,
     +                0.946411374858402816062481491347d0,
     +                0.929569172131939575821490154559d0,
     +                0.910522137078502805756380668008d0,
     +                0.889315445995114105853404038272d0, !10
     +                0.865999398154092819760783385070d0,
     +                0.840629296252580362751691544695d0,
     +                0.813265315122797559741923338086d0,
     +                0.783972358943341407610220525213d0,
     +                0.752819907260531896611863774885d0, !15
     +                0.719881850171610826848940217831d0,
     +                0.685236313054233242563558371031d0,
     +                0.648965471254657339857761231993d0,
     +                0.611155355172393250248852971018d0,
     +                0.571895646202634034283878116659d0, !20
     +                0.531279464019894545658013903544d0,
     +                0.489403145707052957478526307021d0,
     +                0.446366017253464087984947714758d0,
     +                0.402270157963991603695766771260d0,
     +                0.357220158337668115950442615046d0, !25
     +                0.311322871990210956157512698560d0,
     +                0.264687162208767416373964172510d0,
     +                0.217423643740007084149648748988d0,
     +                0.169644420423992818037313629748d0,
     +                0.121462819296120554470376463492d0, !30
     +                0.729931217877990394495429419403d-1,
     +                0.243502926634244325089558428537d-1,
     +                0.178328072169643294729607914497d-2, !1
     +                0.414703326056246763528753572855d-2,
     +                0.650445796897836285611736039998d-2,
     +                0.884675982636394772303091465973d-2,
     +                0.111681394601311288185904930192d-1, !5
     +                0.134630478967186425980607666859d-1,
     +                0.157260304760247193219659952975d-1,
     +                0.179517157756973430850453020011d-1,
     +                0.201348231535302093723403167285d-1,
     +                0.222701738083832541592983303841d-1, !10
     +                0.243527025687108733381775504090d-1,
     +                0.263774697150546586716917926252d-1,
     +                0.283396726142594832275113052002d-1,
     +                0.302346570724024788679740598195d-1,
     +                0.320579283548515535854675043478d-1, !15
     +                0.338051618371416093915654821107d-1,
     +                0.354722132568823838106931467152d-1,
     +                0.370551285402400460404151018095d-1,
     +                0.385501531786156291289624969468d-1,
     +                0.399537411327203413866569261283d-1, !20
     +                0.412625632426235286101562974736d-1,
     +                0.424735151236535890073397679088d-1,
     +                0.435837245293234533768278609737d-1,
     +                0.445905581637565630601347100309d-1,
     +                0.454916279274181444797709969712d-1, !25
     +                0.462847965813144172959532492322d-1,
     +                0.469681828162100173253262857545d-1,
     +                0.475401657148303086622822069442d-1,
     +                0.479993885964583077281261798713d-1,
     +                0.483447622348029571697695271580d-1, !30
     +                0.485754674415034269347990667839d-1,
     +                0.486909570091397203833653907347d-1 /
c
c check npts value
      j = 0
      k = 0
      if( npts .eq. 1 )then
        j = 1
      else
        i = 0
        do while ( j .eq. 0 )
          i = i + 1
          if( nval( i ) .eq. npts )j = npts
          if( j .eq. 0 )then
c increment index of tab array
            k = k + ( nval( i ) + 1 ) / 2
            if( i .eq. 15 )j = -1
          end if
        end do
      end if
      if( j .le. 0)call crash( 'GLQTAB', 'Invalid number of abscissae' )
      if( npts .gt. 1 )then
c set appropriate values for first half of range
        j = ( npts + 1 ) / 2
        do i = 1, j
          acs( i ) = tab( k + i, 1 )
          wgt( i ) = tab( k + i, 2 )
        end do
c rescale and duplicate for other half of range
        xmean = .5 * ( a + b )
        hrnge = .5 * ( b - a )
        j = npts / 2
        do i = 1, j
c this logic sequences the abscissae from a to b
          acs( npts + 1 - i ) = xmean + hrnge * acs( i )
          acs( i ) = xmean - hrnge * acs( i )
          wgt( i ) = hrnge * wgt( i )
          wgt( npts + 1 - i ) = wgt( i )
        end do
c central values needed if an odd number of abscissae
        if( 2 * j .lt. npts )then
          acs( j + 1 ) = xmean
          wgt( j + 1 ) = hrnge * wgt( j + 1 )
        end if
      else
        acs( 1 ) = .5 * ( a + b )
        wgt( 1 ) = 2. * abs( b - a )
      end if
      return
      end
